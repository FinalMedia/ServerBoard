// Generated by Apple Swift version 2.0 (swiftlang-700.0.59 clang-700.0.72)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import ClockKit;
@import WatchKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class CLKComplication;
@class NSDate;
@class CLKComplicationTimelineEntry;
@class CLKComplicationTemplate;

SWIFT_CLASS("_TtC28ServerMonitorWatch_Extension22ComplicationController")
@interface ComplicationController : NSObject <CLKComplicationDataSource>
- (void)getSupportedTimeTravelDirectionsForComplication:(CLKComplication * __nonnull)complication withHandler:(void (^ __nonnull)(CLKComplicationTimeTravelDirections))handler;
- (void)getTimelineStartDateForComplication:(CLKComplication * __nonnull)complication withHandler:(void (^ __nonnull)(NSDate * __nullable))handler;
- (void)getTimelineEndDateForComplication:(CLKComplication * __nonnull)complication withHandler:(void (^ __nonnull)(NSDate * __nullable))handler;
- (void)getPrivacyBehaviorForComplication:(CLKComplication * __nonnull)complication withHandler:(void (^ __nonnull)(CLKComplicationPrivacyBehavior))handler;
- (void)getCurrentTimelineEntryForComplication:(CLKComplication * __nonnull)complication withHandler:(void (^ __nonnull)(CLKComplicationTimelineEntry * __nullable))handler;
- (void)getTimelineEntriesForComplication:(CLKComplication * __nonnull)complication beforeDate:(NSDate * __nonnull)date limit:(NSInteger)limit withHandler:(void (^ __nonnull)(NSArray<CLKComplicationTimelineEntry *> * __nullable))handler;
- (void)getTimelineEntriesForComplication:(CLKComplication * __nonnull)complication afterDate:(NSDate * __nonnull)date limit:(NSInteger)limit withHandler:(void (^ __nonnull)(NSArray<CLKComplicationTimelineEntry *> * __nullable))handler;
- (void)getNextRequestedUpdateDateWithHandler:(void (^ __nonnull)(NSDate * __nullable))handler;
- (void)getPlaceholderTemplateForComplication:(CLKComplication * __nonnull)complication withHandler:(void (^ __nonnull)(CLKComplicationTemplate * __nullable))handler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC28ServerMonitorWatch_Extension17ExtensionDelegate")
@interface ExtensionDelegate : NSObject <WKExtensionDelegate>
- (void)applicationDidFinishLaunching;
- (void)applicationDidBecomeActive;
- (void)applicationWillResignActive;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class WKInterfaceImage;

SWIFT_CLASS("_TtC28ServerMonitorWatch_Extension25GlanceInterfaceController")
@interface GlanceInterfaceController : WKInterfaceController
@property (nonatomic) IBOutlet WKInterfaceImage * __null_unspecified serverStatus;
@property (nonatomic, copy) NSString * __nullable urlPath;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)awakeWithContext:(id __nullable)context;
- (void)willActivate;
- (void)didDeactivate;
@end

@class WKInterfaceTable;
@class WKInterfaceButton;
@class WKInterfaceLabel;

SWIFT_CLASS("_TtC28ServerMonitorWatch_Extension19InterfaceController")
@interface InterfaceController : WKInterfaceController
@property (nonatomic) IBOutlet WKInterfaceTable * __null_unspecified serverTable;
@property (nonatomic) IBOutlet WKInterfaceButton * __null_unspecified refreshButton;
@property (nonatomic) IBOutlet WKInterfaceLabel * __null_unspecified loadingLbl;
@property (nonatomic, copy) NSString * __nullable urlPath;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)awakeWithContext:(id __nullable)context;
- (void)willActivate;
- (void)didDeactivate;
- (void)loadTableData;
- (void)tableVisibleWithTableVisible:(BOOL)tableVisible;
- (IBAction)refreshTable;
@end


SWIFT_CLASS("_TtC28ServerMonitorWatch_Extension22NotificationController")
@interface NotificationController : WKUserNotificationInterfaceController
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)willActivate;
- (void)didDeactivate;
@end


SWIFT_CLASS("_TtC28ServerMonitorWatch_Extension9ServerRow")
@interface ServerRow : NSObject
@property (nonatomic) IBOutlet WKInterfaceLabel * __null_unspecified ServerName;
@property (nonatomic) IBOutlet WKInterfaceLabel * __null_unspecified cpuLbl;
@property (nonatomic) IBOutlet WKInterfaceLabel * __null_unspecified memLbl;
@property (nonatomic) IBOutlet WKInterfaceLabel * __null_unspecified extraLbl1;
@property (nonatomic) IBOutlet WKInterfaceImage * __null_unspecified extraImageView1;
@property (nonatomic) IBOutlet WKInterfaceLabel * __null_unspecified extraLbl2;
@property (nonatomic) IBOutlet WKInterfaceImage * __null_unspecified extraImageView2;
@property (nonatomic) IBOutlet WKInterfaceLabel * __null_unspecified extraLbl3;
@property (nonatomic) IBOutlet WKInterfaceImage * __null_unspecified extraImageView3;
@property (nonatomic) IBOutlet WKInterfaceLabel * __null_unspecified extraLbl4;
@property (nonatomic) IBOutlet WKInterfaceImage * __null_unspecified extraImageView4;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
